CREATE TABLE AUTOR (
    id_autor NUMBER PRIMARY KEY,
    nume_autor varchar2(255) NOT NULL,
    data_nastere DATE NOT NULL, 
    data_deces DATE
);



CREATE TABLE EXPONAT (
	id_exponat NUMBER PRIMARY KEY,
	nume_exponat varchar2(255) NOT NULL, 
	data_publicare date,
	descriere varchar2(255)
);


CREATE TABLE COORDONATOR (
    id_coord NUMBER PRIMARY KEY,
	nume_coordonator varchar2(255) NOT NULL, 
    prenume_coordonator varchar2(255) NOT NULL, 
    numar_telefon varchar2(255) NOT NULL
);

CREATE TABLE ORAS(
    id_oras NUMBER PRIMARY KEY,
    nume_oras varchar2(255) NOT NULL,
    capitala NUMBER NOT NULL
    );
    
CREATE TABLE GALERIE(
     id_galerie NUMBER PRIMARY KEY,
     id_oras NUMBER,
     id_coord NUMBER,
     nume_galerie varchar2(255) NOT NULL,
     FOREIGN KEY (id_oras) REFERENCES ORAS(id_oras) ON DELETE SET NULL,
     FOREIGN KEY (id_coord) REFERENCES COORDONATOR(id_coord) ON DELETE SET NULL
    );
   
    
CREATE TABLE EVENIMENT (
    id_eveniment NUMBER PRIMARY KEY,
    id_galerie NUMBER,
    nume_eveniment VARCHAR2(255) NOT NULL,
    data_inceput date NOT NULL,
    data_final date NOT NULL,
    FOREIGN KEY (id_galerie) REFERENCES GALERIE(id_galerie) ON DELETE SET NULL 
);

CREATE TABLE SPONSOR(
    id_sponsor NUMBER PRIMARY KEY,
    nume_sponsor VARCHAR2(255) NOT NULL
);


CREATE TABLE STAFF(
    id_staff NUMBER PRIMARY KEY,
    nume_echipa VARCHAR2(255),
    rol_staff VARCHAR2(255)
);


CREATE TABLE ANGAJAT(
    id_angajat NUMBER PRIMARY KEY,
    nume_angajat VARCHAR2(255) NOT NULL,
    prenume_angajat VARCHAR2(255) NOT NULL,
    data_nastere DATE NOT NULL,
    salariu NUMBER NOT NULL,
    CNP VARCHAR2(255) NOT NULL,
    id_staff NUMBER,
    FOREIGN KEY (id_staff) REFERENCES STAFF(id_staff) ON DELETE SET NULL   
);

CREATE TABLE EVENIMENT_STAFF_MAPPING(
    id_staff NUMBER,
    id_eveniment NUMBER,
    PRIMARY KEY(id_staff,id_eveniment),
    FOREIGN KEY (id_staff) REFERENCES STAFF(id_staff) ON DELETE SET NULL,
    FOREIGN KEY (id_eveniment) REFERENCES EVENIMENT(id_eveniment) ON DELETE SET NULL
);

CREATE TABLE EXPONAT_AUTOR_MAPPING(
    id_autor NUMBER,
    id_exponat NUMBER,
    PRIMARY KEY(id_autor,id_exponat),
    FOREIGN KEY (id_autor) REFERENCES AUTOR(id_autor) ON DELETE SET NULL,
    FOREIGN KEY (id_exponat) REFERENCES EXPONAT(id_exponat) ON DELETE SET NULL
);

CREATE TABLE GALERIE_SPONSOR_MAPPING(
    id_galerie NUMBER,
    id_sponsor NUMBER,
    donatie NUMBER not null,
    PRIMARY KEY (id_galerie, id_sponsor),
    FOREIGN KEY (id_galerie) REFERENCES GALERIE(id_galerie) ON DELETE SET NULL,
    FOREIGN KEY (id_sponsor) REFERENCES SPONSOR(id_sponsor) ON DELETE SET NULL 
);

CREATE TABLE EXPONAT_EVENIMENT_MAPPING(
    id_eveniment NUMBER,
    id_exponat NUMBER,
    PRIMARY KEY(id_eveniment,id_exponat),
    FOREIGN KEY (id_eveniment) REFERENCES EVENIMENT(id_eveniment) ON DELETE SET NULL,
    FOREIGN KEY (id_exponat) REFERENCES EXPONAT(id_exponat) ON DELETE SET NULL
);

insert into SPONSOR (id_sponsor, nume_sponsor) values (1, 'Skimia');
insert into SPONSOR (id_sponsor, nume_sponsor) values (2, 'Plajo');
insert into SPONSOR (id_sponsor, nume_sponsor) values (3, 'Voolia');
insert into SPONSOR (id_sponsor, nume_sponsor) values (4, 'Topicblab');
insert into SPONSOR (id_sponsor, nume_sponsor) values (5, 'Riffwire');

select * from sponsor

insert into AUTOR (id_autor, nume_autor, data_nastere, data_deces) values (1, 'Van Gogh', '13-09-1951', '06-10-1984');
insert into AUTOR (id_autor, nume_autor, data_nastere, data_deces) values (2, 'Picasso', '28-11-1991', NULL);
insert into AUTOR (id_autor, nume_autor, data_nastere, data_deces) values (3, 'Castelli', '18-06-1985', '19-12-2009');
insert into AUTOR (id_autor, nume_autor, data_nastere, data_deces) values (4, 'Carolynn', '29-08-1989', NULL);
insert into AUTOR (id_autor, nume_autor, data_nastere, data_deces) values (5, 'Da Vinci', '05-03-1975', '13-10-2018');
insert into AUTOR (id_autor, nume_autor, data_nastere, data_deces) values (6, 'Chell', '17-07-1960', NULL);

SELECT * FROM AUTOR

insert into COORDONATOR (id_coord, nume_coordonator, prenume_coordonator, numar_telefon) values (1, 'des Remedios', 'Milty', '661 355 2788');
insert into COORDONATOR (id_coord, nume_coordonator, prenume_coordonator, numar_telefon) values (2, 'Howsden', 'Hannis', '851 662 1805');
insert into COORDONATOR (id_coord, nume_coordonator, prenume_coordonator, numar_telefon) values (3, 'Byforth', 'Hy', '302 853 4191');
insert into COORDONATOR (id_coord, nume_coordonator, prenume_coordonator, numar_telefon) values (4, 'Folley', 'Xerxes', '888 630 2960');
insert into COORDONATOR (id_coord, nume_coordonator, prenume_coordonator, numar_telefon) values (5, 'Broadis', 'Renado', '215 129 8433');

SELECT * FROM COORDONATOR

insert into STAFF (id_staff, nume_echipa, rol_staff) values (1, 'Fotografii', 'fotografie');
insert into STAFF (id_staff, nume_echipa, rol_staff) values (2, 'Bucatarii', 'catering');
insert into STAFF (id_staff, nume_echipa, rol_staff) values (3, 'Luminatii', 'lumini');
insert into STAFF (id_staff, nume_echipa, rol_staff) values (4, 'Masinele', 'transport');
insert into STAFF (id_staff, nume_echipa, rol_staff) values (5, 'Gardienii', 'body-guards');

SELECT * FROM STAFF

insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (1, 'Rudderham', 'Alli', '19-08-2001', 1567, '561017087225946895', 1);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (2, 'Jurges', 'Lynette', '21-12-1982', 2270, '3561813473931435', 1);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (3, 'McCulley', 'Hendrick', '21-11-1979', 2780, '4026616165983581', 1);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (4, 'Neumann', 'Aloysius', '05-09-1998', 4882, '3570830634142362', 2);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (5, 'Murfin', 'Constantin', '29-09-1980', 2748, '5303845895843085', 2);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (6, 'Colville', 'Solly', '07-01-1971', 2176, '63040369063298219', 2);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (7, 'McGettrick', 'Jeddy', '11-03-1976', 4400, '5602245404939466', 2);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (8, 'Christescu', 'Steven', '23-01-1967', 4565, '36532667146898', 2);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (9, 'Farrens', 'Vasili', '04-04-1967', 2156, '3539528611653019', 3);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (10, 'Christescu', 'Hobey', '09-06-1984', 3580, '560223844255436250', 3);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (11, 'Myall', 'Denni', '18-11-1970', 2161, '3564352220627936', 3);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (12, 'Greenlies', 'Eugen', '24-01-1999', 3629, '5610695640397392', 4);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (13, 'Neeson', 'Weider', '07-01-1988', 2207, '3576378139687378', 4);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (14, 'Comini', 'Deny', '16-03-1981', 4107, '5602233476673742', 4);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (15, 'Burrell', 'Felicle', '28-10-1985', 2193, '3549037879008427', 4);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (16, 'Badland', 'Lek', '11-01-1972', 3288, '3574996911389939', 5);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (17, 'Canete', 'Bebe', '04-11-1985', 2671, '633424762069417930', 5);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (18, 'Christofle', 'Tremayne', '05-01-2001', 3694, '4508859506024551', 3);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (19, 'Heeron', 'Mechelle', '11-07-1997', 2452, '4844780974268905', null);
insert into ANGAJAT (id_angajat, nume_angajat, prenume_angajat, data_nastere, salariu, CNP, id_staff) values (20, 'Spaight', 'Lilah', '27-05-1997', 4107, '3578494216089996', null);

SELECT * FROM ANGAJAT

SELECT * FROM AUTOR

insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (1, 'OXYCODONE', '30/9/2013', 'Digitized explicit parallelism');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (2, 'Starry Night', '6/7/2007', 'Synergistic heuristic adapter');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (3, 'MORUS', '2/7/1999', 'Right-sized mobile service-desk');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (4, 'Plus', '7/5/2002', 'User-centric zero tolerance parallelism');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (5, 'anti', '5/12/2022', 'Front-line content-based success');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (6, 'Metronidazole', null, 'Total empowering strategy');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (7, 'PROMETHAZINE', '7/12/2001', 'Enhanced tertiary process improvement');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (8, 'Anti Itch', null, 'Total fresh-thinking project');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (9, 'Peisaj', '28/2/2002', 'Ergonomic global intranet');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (10, 'PrePost', '10/10/2008', 'Switchable composite array');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (11, 'Cedar Elm', '12/3/1998', 'Persevering fresh-thinking throughput');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (12, 'Sleep Aid', '24/6/1995', null);
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (13, 'HONIBE', '11/11/2007', null);
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (14, 'METHYLIN', null, 'Expanded local neural-net');
insert into EXPONAT (id_EXPONAT, nume_exponat, data_publicare, descriere) values (15, 'Volcano', '26/8/2008', null);

select * from exponat

insert into ORAS (id_oras, nume_oras, capitala) values (1, 'Paris', 1);
insert into ORAS (id_oras, nume_oras, capitala) values (2, 'Porto Ferreira', 0);
insert into ORAS (id_oras, nume_oras, capitala) values (3, 'New York', 0);
insert into ORAS (id_oras, nume_oras, capitala) values (4, 'Tr Vinh', 0);
insert into ORAS (id_oras, nume_oras, capitala) values (5, 'Bucuresti', 1);

insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (1, 1, 1, 'Primavera');
insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (2, 2, 2, 'The Best');
insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (3, 3, 3, 'Aperture');
insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (4, 4, 4, 'Salt Mines');
insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (5, 5, 5, 'Mechanical');
insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (6, 1, 5, 'Quirkcy');
insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (7, 5, 4, 'Blck Mesa');

SELECT * FROM GALERIE

SELECT NUME_GALERIE, NUME_COORDONATOR, NUME_ORAS
FROM GALERIE
INNER JOIN COORDONATOR ON COORDONATOR.ID_COORD = GALERIE.ID_COORD
INNER JOIN ORAS ON ORAS.ID_ORAS = GALERIE.ID_ORAS

insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (1, 1, 'Latlux', '12/06/2014', '24/07/2014');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (2, 1, 'Quo Lux', '24/03/2012', '11/04/2012');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (3, 2, 'Prodder', '22/02/2012', '16/03/2012');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (4, 2, 'Flowdesk', '02/08/2014', '24/08/2014');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (5, 2, 'Greenlam', '02/02/2018', '12/02/2018');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (6, 3, 'Latlux', '31/07/2013', '12/08/2013');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (7, 3, 'Fix San', '07/07/2020', '29/10/2020');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (8, 4, 'Ventosanzap', '06/01/2019', '11/01/2019');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (9, 4, 'Job', '19/06/2021', '01/07/2021');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (10, 4, 'Stim', '20/01/2016', '15/02/2016');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (11, 4, 'Konklab', '29/06/2018', '09/07/2019');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (12, 5, 'Domainer', '03/01/2015', '06/04/2015');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (13, 5, 'Fix San', '4/08/2014', '13/08/2014');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (14, 6, 'Namfix', '12/06/2015', '27/09/2015');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (15, 7, 'Subin', '09/09/2015', '27/12/2015');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (16, 7, 'Y-Solowarm', '09/04/2019', '29/07/2019');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (17, 7, 'Pannier', '30/07/2021', '31/08/2021');

SELECT * FROM galerie

SELECT * FROM SPONSOR

INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (1, 1, 10000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (1, 2, 7000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (2, 1, 14000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (2, 3, 20000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (2, 4, 5000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (3, 5, 2000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (3, 1, 5700);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (4, 1, 8000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (5, 2, 9000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (5, 1, 400);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (6, 3, 6000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (6, 4, 900);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (6, 5, 6000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (6, 3, 4000);
INSERT INTO GALERIE_SPONSOR_MAPPING (id_galerie, id_sponsor, donatie) values (1, 3, 1000);

DELETE FROM GALERIE_SPONSOR_MAPPING WHERE id_galerie = 7

select * from GALERIE_SPONSOR_MAPPING

SELECT NUME_GALERIE, NUME_SPONSOR, DONATIE FROM GALERIE_SPONSOR_MAPPING
INNER JOIN GALERIE ON GALERIE.id_galerie = GALERIE_SPONSOR_MAPPING.id_galerie
INNER JOIN SPONSOR ON SPONSOR.id_sponsor = GALERIE_SPONSOR_MAPPING.id_sponsor

SELECT * FROM EVENIMENT



SELECT * FROM EXPONAT

insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (7, 4);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (1, 11);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (5, 1);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (5, 6);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (6, 6);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (7, 4);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (13, 11);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (6, 5);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (2, 13);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (14, 4);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (13, 2);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (5, 2);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (17, 3);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (7, 5);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (13, 7);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (7, 4);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (3, 8);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (8, 7);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (12, 9);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (5, 13);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (4, 3);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (4, 10);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (2, 6);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (11, 6);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (4, 12);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (14, 1);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (1, 8);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (15, 13);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (2, 1);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (15, 6);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (14, 11);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (12, 14);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (2, 4);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (12, 3);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (8, 1);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (10, 4);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (14, 5);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (4, 6);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (6, 11);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (3, 2);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (2, 10);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (7, 1);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (13, 8);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (14, 9);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (13, 9);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (14, 5);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (9, 8);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (6, 11);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (17, 2);
insert into EXPONAT_EVENIMENT_MAPPING (id_eveniment, id_EXPONAT) values (16, 13);


SELECT NUME_EXPONAT, NUME_EVENIMENT FROM EXPONAT_EVENIMENT_MAPPING
INNER JOIN EXPONAT ON EXPONAT.ID_EXPONAT = EXPONAT_EVENIMENT_MAPPING.ID_EXPONAT
INNER JOIN EVENIMENT ON EVENIMENT.ID_EVENIMENT = EXPONAT_EVENIMENT_MAPPING.ID_EVENIMENT

select * from exponat

insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (1,1);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (2,5);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (3,6);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (4,6);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (5,2);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (6,3);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (7,1);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (8,4);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (9,4);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (10,2);

insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (2,11);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (2,12);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (3,12);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (4,12);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (4,13);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (6,13);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (5,14);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (2,14);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (5,15);
insert into EXPONAT_AUTOR_MAPPING(id_autor, id_exponat) values (3,15);

SELECT * FROM EXPONAT


select * from AUTOR
SELECT * FROM EXPONAT

select eam.id_autor from EXPONAT_AUTOR_MAPPING eam


select * from eveniment
select * from staff

insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (1, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (1, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (10, 3);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (11, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (11, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (12, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (12, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (13, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (13, 3);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (14, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (14, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (14, 3);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (14, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (15, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (15, 3);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (15, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (17, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (17, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (17, 5);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (2, 3);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (3, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (4, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (4, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (4, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (4, 5);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (5, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (5, 2);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (5, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (6, 3);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (6, 5);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (7, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (8, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (8, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (9, 1);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (9, 3);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (9, 4);
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (9, 5);

select e.nume_eveniment, s.nume_echipa from EVENIMENT_STAFF_MAPPING esm 
inner join staff s on s.id_staff = esm.id_staff
inner join eveniment e on e.id_eveniment = esm.id_eveniment

--CERINTA 6
--Pentru o galerie sa se afiseze echipele staff care paticipa la un eveniment
CREATE OR REPLACE PROCEDURE CERINTA6 (numegale GALERIE.nume_galerie%type)
AS
    TYPE tab_indx IS TABLE OF EVENIMENT%ROWTYPE INDEX BY PLS_INTEGER;
    evenimente tab_indx;
    
    TYPE lista_nested IS TABLE OF STAFF%rowtype;
    aux_staff lista_nested := lista_nested();
    
    nr NUMBER;
    nr_staffs NUMBER;
    
BEGIN
    
    SELECT e.id_eveniment,e.id_galerie, e.nume_eveniment, e.data_inceput, e.data_final
    BULK COLLECT INTO evenimente
    FROM EVENIMENT e, GALERIE g
    WHERE e.id_galerie = g.id_galerie AND UPPER(g.nume_galerie) LIKE UPPER(numegale) ;
    
    SELECT COUNT(*) 
    INTO nr
    FROM EVENIMENT e, GALERIE g
    WHERE e.id_galerie = g.id_galerie AND UPPER(g.nume_galerie) LIKE UPPER(numegale)
    GROUP BY g.id_galerie;
    
    DBMS_OUTPUT.PUT_LINE('Nr evenimente la galeria '|| numegale || ' ' || nr);
    
    FOR i in evenimente.first..evenimente.last LOOP
            SELECT s.id_staff, s.nume_echipa, s.rol_staff
            BULK COLLECT INTO aux_staff
            FROM EVENIMENT_STAFF_MAPPING esm, EVENIMENT e, STAFF s
            WHERE s.id_staff = esm.id_staff AND esm.id_eveniment = e.id_eveniment AND e.id_eveniment = evenimente(i).id_eveniment; 
       --DBMS_OUTPUT.PUT_LINE(aux_staff.count);
           nr_staffs :=  aux_staff.count;
           
           IF nr_staffs = 0 THEN
                DBMS_OUTPUT.PUT_LINE('Evenimentul nu are staffs!');
           END IF;
           
           IF nr_staffs >0 THEN
           DBMS_OUTPUT.PUT_LINE('Evenimentul ' || evenimente(i).nume_eveniment || ' a angajat ' || nr_staffs || ' echipe');
       FOR j in aux_staff .first..aux_staff.last LOOP
           DBMS_OUTPUT.PUT_LINE(aux_staff(j).nume_echipa);
       END LOOP;
       
            END IF;
    
    END LOOP;
    
    

END;
/

BEGIN 
    CERINTA6('Primavera');
END;
/
 


--CERINTA 7

--Sa se afiseze galeriile, evenimentele acelei galerii si exponatele ce apar la
--galerie a unui oras

CREATE OR REPLACE PROCEDURE CERINTA7(numeor ORAS.nume_oras%type)
AS
    
    CURSOR GALERII IS
        SELECT *
        FROM galerie
        WHERE id_oras = (
        SELECT id_oras
        FROM ORAS
        WHERE upper(nume_oras) LIKE upper(numeor)
        );
    
    CURSOR events(galerieid GALERIE.id_galerie%type) IS
        SELECT nume_eveniment, id_eveniment
        FROM EVENIMENT
        WHERE id_galerie = galerieid ; 
        
    CURSOR arts(idev EVENIMENT.id_eveniment%type) IS
        SELECT nume_exponat || ' About: '|| descriere
        FROM EXPONAT_EVENIMENT_MAPPING eem
        INNER JOIN EXPONAT E
        ON E.id_exponat = eem.id_exponat
        WHERE eem.id_eveniment = idev;
        
    den eveniment.nume_eveniment%TYPE;
    evid eveniment.nume_eveniment%TYPE;
    text VARCHAR2(250);
    
BEGIN

    for i in galerii
    LOOP
         DBMS_OUTPUT.PUT_LINE('Galeria ' || i.nume_galerie);
            for j in events(i.id_galerie) LOOP
                DBMS_OUTPUT.PUT_LINE('Eveniment ' || j.nume_eveniment);
                   OPEN arts(j.id_eveniment);
                        LOOP 
                            FETCH arts INTO text;
                            EXIT WHEN arts%NOTFOUND;
                            DBMS_OUTPUT.PUT_LINE('          ' || text);
                        END LOOP;
                   CLOSE arts;
            END LOOP;
         DBMS_OUTPUT.PUT_LINE('____________________');
    END LOOP;

END;
/

BEGIN
        CERINTA7('Bucuresti');
END;
/


--CERINTA 8
--pentru fiecare galerie sa sa calculeze profitul acesta fiind diferenta dintre donatiile primite si suma salariilor staffului  

CREATE OR REPLACE FUNCTION CERINTA8(numegal galerie.nume_galerie%type) RETURN NUMBER
IS
    donatii NUMBER;
    datorii NUMBER;
    profit NUMBER;
    
    TYPE tabl_indx IS TABLE OF GALERIE%ROWTYPE INDEX BY PLS_INTEGER;
    aux tabl_indx;
    
    TYPE tabl_indx_sps IS TABLE OF GALERIE_SPONSOR_MAPPING%ROWTYPE INDEX BY PLS_INTEGER;
    aux_sps tabl_indx_sps;
    
    TYPE tabl_indx_ang IS TABLE OF ANGAJAT%ROWTYPE INDEX BY PLS_INTEGER;
    aux_ang tabl_indx_ang;
    
    NO_DATA_FOUND_GAL EXCEPTION;
    NO_DATA_FOUND_DATORIE EXCEPTION;
    TOO_MANY_ROWS EXCEPTION;
BEGIN
    
    donatii:=0;
    datorii:=0;
    
    SELECT *
    BULK COLLECT INTO aux
    from GALERIE
    WHERE numegal = galerie.nume_galerie;
    
    IF SQL%NOTFOUND THEN 
        RAISE NO_DATA_FOUND_GAL;
    END IF;
    
    IF aux.count>1 THEN 
        RAISE TOO_MANY_ROWS;
    END IF;
    
    --DONATIILE 
    
    SELECT gsm.id_galerie, gsm.id_sponsor, gsm.donatie 
    BULK COLLECT INTO aux_sps
    FROM GALERIE g
    INNER JOIN GALERIE_SPONSOR_MAPPING  gsm ON g.id_galerie = gsm.id_galerie
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal);
    IF SQL%NOTFOUND THEN 
        RAISE NO_DATA_FOUND_DATORIE;
    END IF;
    
    SELECT sum(donatie) 
    INTO DONATII
    FROM GALERIE g
    INNER JOIN GALERIE_SPONSOR_MAPPING  gsm ON g.id_galerie = gsm.id_galerie
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal)
    group by nume_galerie;
    
    
    --Salariile
    SELECT an.id_angajat,an.nume_angajat, an.prenume_angajat, an.data_nastere, an.salariu, an.cnp, an.id_staff
    BULK COLLECT INTO aux_ang
    FROM GALERIE g
    INNER JOIN EVENIMENT ev ON g.id_galerie = ev.id_galerie
    INNER JOIN EVENIMENT_STAFF_MAPPING ESM ON esm.id_eveniment = ev.id_eveniment
    INNER join STAFF s on s.id_staff = esm.id_staff
    INNER join angajat an on an.id_STAFF = s.id_staff
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal);
    
    IF SQL%NOTFOUND THEN 
        datorii:=0;
    
    ELSE    

    SELECT sum(salariu)
    INTO DATORII
    FROM GALERIE g
    INNER JOIN EVENIMENT ev ON g.id_galerie = ev.id_galerie
    INNER JOIN EVENIMENT_STAFF_MAPPING ESM ON esm.id_eveniment = ev.id_eveniment
    inner join STAFF s on s.id_staff = esm.id_staff
    inner join angajat an on an.id_angajat = s.id_staff
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal)
    GROUP BY nume_galerie;
    END IF;
    
    profit:= donatii-datorii;

        IF PROFIT < 0 THEN
            RAISE NO_DATA_FOUND_DATORIE;
        END IF;
    DBMS_OUTPUT.PUT_LINE(profit);
    return profit;
    EXCEPTION
        WHEN NO_DATA_FOUND_GAL THEN 
            DBMS_OUTPUT.PUT_LINE('Nu exista aceasta galerie!');
            RETURN -1000;
        WHEN NO_DATA_FOUND_DATORIE THEN 
            DBMS_OUTPUT.PUT_LINE('Nu a realizat niciun profit!');
            RETURN -1000;
        WHEN TOO_MANY_ROWS THEN 
            DBMS_OUTPUT.PUT_LINE('Exista mai multe galerii cu acest nume!');
            RETURN -1000;
        WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Alta eroare!');
                RETURN -1000;

END;
/

DECLARE
aux NUMBER;
BEGIN
--aux := CERINTA8('Primavera');

--aux := CERINTA8('Bjork');
--aux := CERINTA8('Datorie');
aux := CERINTA8('Quirkcy');
DBMS_OUTPUT.PUT_LINE(aux);

END;
/

insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (9, 1, 1, 'Quirkcy');

insert into galerie (id_galerie, id_oras, id_coord, nume_galerie) values (8, 1, 1, 'Datorie');
insert into EVENIMENT (id_eveniment, id_galerie, nume_eveniment, data_inceput, data_final) values (18, 8, 'Nomooney', '12/06/2014', '24/07/2014');
insert into EVENIMENT_STAFF_MAPPING (id_eveniment, id_staff) values (18, 2);

SELECT * FROM GALERIE

SELECT nume_galerie, sum(salariu) as Datorie FROM GALERIE g
INNER JOIN EVENIMENT ev ON g.id_galerie = ev.id_galerie
INNER JOIN EVENIMENT_STAFF_MAPPING ESM ON esm.id_eveniment = ev.id_eveniment
inner join STAFF s on s.id_staff = esm.id_staff
inner join angajat an on an.id_angajat = s.id_staff
GROUP BY nume_galerie

SELECT nume_galerie, sum(donatie) FROM GALERIE g
INNER JOIN GALERIE_SPONSOR_MAPPING  gsm ON g.id_galerie = gsm.id_galerie
group by nume_galerie


--CERINTA 9
--Sa se afiseze exponatele care se gasesc intr-un oras. Erorile care pot aparea sunt: nu exista orase cu acest nume, nu sunt exponate in oras si sunt mai multe orase cu acelasi nume

CREATE OR REPLACE PROCEDURE CERINT9(numeor oras.nume_oras%type)
AS
    TYPE tab_indx_exp IS TABLE OF EXPONAT%ROWTYPE INDEX BY PLS_INTEGER;
    exponate tab_indx_exp; 
    
    TYPE tab_indx_orase IS TABLE OF ORAS%ROWTYPE INDEX BY PLS_INTEGER;
    orase tab_indx_orase;
    
    NO_DATA_FOUND_ORAS EXCEPTION;
    NO_DATA_FOUND_EXPONATE EXCEPTION;
    TOO_MANY_ROWS EXCEPTION;


BEGIN

    SELECT *
    BULK COLLECT INTO orase
    FROM oras
    WHERE UPPER(nume_oras) LIKE UPPER(numeor);
    
    
    IF SQL%NOTFOUND THEN
        RAISE NO_DATA_FOUND_ORAS;
    END IF;
    
    IF orase.count >=2 THEN
        RAISE TOO_MANY_ROWS;
    END IF;
    
    
    SELECT DISTINCT ex.id_exponat,ex.NUME_EXPONAT, ex.data_publicare, ex.descriere
    BULK COLLECT INTO exponate
    FROM ORAS o 
    INNER JOIN GALERIE g on g.id_oras = o.id_oras
    inner join EVENIMENT ev on g.id_galerie = ev.id_galerie
    inner join EXPONAT_EVENIMENT_MAPPING eem on ev.id_eveniment = eem.id_eveniment
    inner join exponat ex on ex.id_exponat = eem.id_exponat
    inner join EXPONAT_AUTOR_MAPPING eam on eam.id_exponat=ex.id_exponat
    INNER join autor a on eam.id_autor = a.id_autor
    WHERE a.data_deces IS NULL AND nume_oras like numeor;

    --DBMS_OUTPUT.PUT_LINE(exponate.count);
    
    IF exponate.count = 0 THEN
     RAISE NO_DATA_FOUND_EXPONATE;
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('In orasul '||numeor || ' sunt exponatele:');
    FOR i in exponate.first..exponate.last LOOP
        DBMS_OUTPUT.PUT_LINE(exponate(i).nume_exponat);
    END LOOP;

    EXCEPTION
        WHEN NO_DATA_FOUND_ORAS THEN 
            DBMS_OUTPUT.PUT_LINE('Nu exista acest oras!');
        WHEN NO_DATA_FOUND_EXPONATE THEN 
            DBMS_OUTPUT.PUT_LINE('Nu sunt astfel de exponate in oras!');
        WHEN TOO_MANY_ROWS THEN 
            DBMS_OUTPUT.PUT_LINE('Exista mai multe orase cu acest nume!');
        WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Alta eroare!');
                
END;
/

BEGIN 
    --CERINT9('Paris');
    --CERINT9('Budapesta');
    --CERINT9('Constanta');
    CERINT9('Husi');    
END;
/

SELECT * FROM ORAS

insert into ORAS (id_oras, nume_oras, capitala) values (6, 'Budapesta', 1);
insert into ORAS (id_oras, nume_oras, capitala) values (7, 'Constanta', 0);
insert into ORAS (id_oras, nume_oras, capitala) values (8, 'Constanta', 0);

--CERINTA 12
--Am creat o tabela noua, care memoreaza toate modificarile facut asupraa schemei cu ajutorul unui trigger

CREATE TABLE utiliz(
  nume_utilizator VARCHAR2(255),
  nume_bd VARCHAR(255),
  eveniment VARCHAR2(255),
  nume_target VARCHAR(255),
  data DATE
);


CREATE OR REPLACE TRIGGER CERINTA12
    AFTER CREATE OR DROP OR ALTER ON SCHEMA 
BEGIN
    INSERT INTO utiliz
    values(SYS.LOGIN_USER, SYS.DATABASE_NAME,SYS.SYSEVENT,SYS.DICTIONARY_OBJ_NAME, SYSDATE);
END;
/

CREATE TABLE tabela_temp(ind NUMBER(4));
ALTER TABLE tabela_temp ADD(nume VARCHAR2(20));

SELECT * FROM UTILIZ;
DROP TRIGGER CERINTA12;

--CERINTA 10
--Am facut un trigger care nu permite inserarea in tabela oras in zilele de vara sau zilele de 13
CREATE OR REPLACE TRIGGER CERINTA10
    BEFORE INSERT OR UPDATE OR DELETE ON ORAS
BEGIN
    IF(TO_CHAR(SYSDATE,'DD') LIKE '13' OR TO_CHAR(SYSDATE,'MM') LIKE '07' OR TO_CHAR(SYSDATE,'MM') LIKE '08' OR TO_CHAR(SYSDATE,'MM') LIKE '06') THEN 
        RAISE_APPLICATION_ERROR(-20001, 'Zi cu ghinion, nu se lucreaza!');
    END IF;
END;

INSERT INTO ORAS VALUES(7,'Test',0);

DROP TRIGGER CERINTA10


--CERINTA 11
--Am creat un trigger care nu permite scaderea salariului
CREATE OR REPLACE TRIGGER CERINTA11
    AFTER UPDATE OF SALARIU ON ANGAJAT
    FOR EACH ROW
BEGIN
    IF(:NEW.salariu < :OLD.salariu) THEN 
    RAISE_APPLICATION_ERROR (-20001, 'Salariul nu poate fi mai mic decat cel vechi!'); 
    END IF;
END;
/

UPDATE ANGAJAT
SET SALARIU = 1
WHERE id_angajat=1;

DROP TRIGGER CERINTA11

CREATE OR REPLACE FUNCTION sal_mediu(idstaff STAFF.id_staff%type) RETURN NUMBER
IS
    total NUMBER;
BEGIN
    SELECT AVG(SALARIU) 
    INTO total
    FROM STAFF
    INNER JOIN ANGAJAT ON ANGAJAT.ID_STAFF = STAFF.ID_STAFF
    WHERE idstaff = STAFF.id_staff
    GROUP BY NUME_ECHIPA;
    
    RETURN total;
END;
/


--CERINTA 13

CREATE OR REPLACE PACKAGE proiect_complet AS
    PROCEDURE CERINTA6 (numegale GALERIE.nume_galerie%type);
    PROCEDURE CERINTA7(numeor ORAS.nume_oras%type);
    FUNCTION CERINTA8(numegal galerie.nume_galerie%type) RETURN NUMBER;
    PROCEDURE CERINT9(numeor oras.nume_oras%type); 
    
END proiect_complet;
/

CREATE OR REPLACE PACKAGE BODY proiect_complet
AS
PROCEDURE CERINTA6 (numegale GALERIE.nume_galerie%type)
AS
    TYPE tab_indx IS TABLE OF EVENIMENT%ROWTYPE INDEX BY PLS_INTEGER;
    evenimente tab_indx;
    
    TYPE lista_nested IS TABLE OF STAFF%rowtype;
    aux_staff lista_nested := lista_nested();
    
    nr NUMBER;
    nr_staffs NUMBER;
    
BEGIN
    
    SELECT e.id_eveniment,e.id_galerie, e.nume_eveniment, e.data_inceput, e.data_final
    BULK COLLECT INTO evenimente
    FROM EVENIMENT e, GALERIE g
    WHERE e.id_galerie = g.id_galerie AND UPPER(g.nume_galerie) LIKE UPPER(numegale) ;
    
    SELECT COUNT(*) 
    INTO nr
    FROM EVENIMENT e, GALERIE g
    WHERE e.id_galerie = g.id_galerie AND UPPER(g.nume_galerie) LIKE UPPER(numegale)
    GROUP BY g.id_galerie;
    
    DBMS_OUTPUT.PUT_LINE('Nr evenimente la galeria '|| numegale || ' ' || nr);
    
    FOR i in evenimente.first..evenimente.last LOOP
            SELECT s.id_staff, s.nume_echipa, s.rol_staff
            BULK COLLECT INTO aux_staff
            FROM EVENIMENT_STAFF_MAPPING esm, EVENIMENT e, STAFF s
            WHERE s.id_staff = esm.id_staff AND esm.id_eveniment = e.id_eveniment AND e.id_eveniment = evenimente(i).id_eveniment; 
       --DBMS_OUTPUT.PUT_LINE(aux_staff.count);
           nr_staffs :=  aux_staff.count;
           
           IF nr_staffs = 0 THEN
                DBMS_OUTPUT.PUT_LINE('Evenimentul nu are staffs!');
           END IF;
           
           IF nr_staffs >0 THEN
           DBMS_OUTPUT.PUT_LINE('Evenimentul ' || evenimente(i).nume_eveniment || ' a angajat ' || nr_staffs || ' echipe');
       FOR j in aux_staff .first..aux_staff.last LOOP
           DBMS_OUTPUT.PUT_LINE(aux_staff(j).nume_echipa);
       END LOOP;
       
            END IF;
    
    END LOOP;
END CERINTA6;

PROCEDURE CERINTA7(numeor ORAS.nume_oras%type)
AS
    
    CURSOR GALERII IS
        SELECT *
        FROM galerie
        WHERE id_oras = (
        SELECT id_oras
        FROM ORAS
        WHERE upper(nume_oras) LIKE upper(numeor)
        );
    
    CURSOR events(galerieid GALERIE.id_galerie%type) IS
        SELECT nume_eveniment, id_eveniment
        FROM EVENIMENT
        WHERE id_galerie = galerieid ; 
        
    CURSOR arts(idev EVENIMENT.id_eveniment%type) IS
        SELECT nume_exponat || ' About: '|| descriere
        FROM EXPONAT_EVENIMENT_MAPPING eem
        INNER JOIN EXPONAT E
        ON E.id_exponat = eem.id_exponat
        WHERE eem.id_eveniment = idev;
        
    den eveniment.nume_eveniment%TYPE;
    evid eveniment.nume_eveniment%TYPE;
    text VARCHAR2(250);
    
BEGIN

    for i in galerii
    LOOP
         DBMS_OUTPUT.PUT_LINE('Galeria ' || i.nume_galerie);
            for j in events(i.id_galerie) LOOP
                DBMS_OUTPUT.PUT_LINE('Eveniment ' || j.nume_eveniment);
                   OPEN arts(j.id_eveniment);
                        LOOP 
                            FETCH arts INTO text;
                            EXIT WHEN arts%NOTFOUND;
                            DBMS_OUTPUT.PUT_LINE('          ' || text);
                        END LOOP;
                   CLOSE arts;
            END LOOP;
         DBMS_OUTPUT.PUT_LINE('____________________');
    END LOOP;

END CERINTA7;

FUNCTION CERINTA8(numegal galerie.nume_galerie%type) RETURN NUMBER
IS
    donatii NUMBER;
    datorii NUMBER;
    profit NUMBER;
    
    TYPE tabl_indx IS TABLE OF GALERIE%ROWTYPE INDEX BY PLS_INTEGER;
    aux tabl_indx;
    
    TYPE tabl_indx_sps IS TABLE OF GALERIE_SPONSOR_MAPPING%ROWTYPE INDEX BY PLS_INTEGER;
    aux_sps tabl_indx_sps;
    
    TYPE tabl_indx_ang IS TABLE OF ANGAJAT%ROWTYPE INDEX BY PLS_INTEGER;
    aux_ang tabl_indx_ang;
    
    NO_DATA_FOUND_GAL EXCEPTION;
    NO_DATA_FOUND_DATORIE EXCEPTION;
    TOO_MANY_ROWS EXCEPTION;
BEGIN
    
    donatii:=0;
    datorii:=0;
    
    SELECT *
    BULK COLLECT INTO aux
    from GALERIE
    WHERE numegal = galerie.nume_galerie;
    
    IF SQL%NOTFOUND THEN 
        RAISE NO_DATA_FOUND_GAL;
    END IF;
    
    IF aux.count>1 THEN 
        RAISE TOO_MANY_ROWS;
    END IF;
    
    --DONATIILE 
    
    SELECT gsm.id_galerie, gsm.id_sponsor, gsm.donatie 
    BULK COLLECT INTO aux_sps
    FROM GALERIE g
    INNER JOIN GALERIE_SPONSOR_MAPPING  gsm ON g.id_galerie = gsm.id_galerie
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal);
    IF SQL%NOTFOUND THEN 
        RAISE NO_DATA_FOUND_DATORIE;
    END IF;
    
    SELECT sum(donatie) 
    INTO DONATII
    FROM GALERIE g
    INNER JOIN GALERIE_SPONSOR_MAPPING  gsm ON g.id_galerie = gsm.id_galerie
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal)
    group by nume_galerie;
    
    
    --Salariile
    SELECT an.id_angajat,an.nume_angajat, an.prenume_angajat, an.data_nastere, an.salariu, an.cnp, an.id_staff
    BULK COLLECT INTO aux_ang
    FROM GALERIE g
    INNER JOIN EVENIMENT ev ON g.id_galerie = ev.id_galerie
    INNER JOIN EVENIMENT_STAFF_MAPPING ESM ON esm.id_eveniment = ev.id_eveniment
    INNER join STAFF s on s.id_staff = esm.id_staff
    INNER join angajat an on an.id_STAFF = s.id_staff
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal);
    
    IF SQL%NOTFOUND THEN 
        datorii:=0;
    
    ELSE    

    SELECT sum(salariu)
    INTO DATORII
    FROM GALERIE g
    INNER JOIN EVENIMENT ev ON g.id_galerie = ev.id_galerie
    INNER JOIN EVENIMENT_STAFF_MAPPING ESM ON esm.id_eveniment = ev.id_eveniment
    inner join STAFF s on s.id_staff = esm.id_staff
    inner join angajat an on an.id_angajat = s.id_staff
    WHERE UPPER(g.nume_galerie) LIKE UPPER(numegal)
    GROUP BY nume_galerie;
    END IF;
    
    profit:= donatii-datorii;

        IF PROFIT < 0 THEN
            RAISE NO_DATA_FOUND_DATORIE;
        END IF;
    DBMS_OUTPUT.PUT_LINE(profit);
    return profit;
    EXCEPTION
        WHEN NO_DATA_FOUND_GAL THEN 
            DBMS_OUTPUT.PUT_LINE('Nu exista aceasta galerie!');
            RETURN -1000;
        WHEN NO_DATA_FOUND_DATORIE THEN 
            DBMS_OUTPUT.PUT_LINE('Nu a realizat niciun profit!');
            RETURN -1000;
        WHEN TOO_MANY_ROWS THEN 
            DBMS_OUTPUT.PUT_LINE('Exista mai multe galerii cu acest nume!');
            RETURN -1000;
        WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Alta eroare!');
                RETURN -1000;

END CERINTA8;

PROCEDURE CERINT9(numeor oras.nume_oras%type)
AS
    TYPE tab_indx_exp IS TABLE OF EXPONAT%ROWTYPE INDEX BY PLS_INTEGER;
    exponate tab_indx_exp; 
    
    TYPE tab_indx_orase IS TABLE OF ORAS%ROWTYPE INDEX BY PLS_INTEGER;
    orase tab_indx_orase;
    
    NO_DATA_FOUND_ORAS EXCEPTION;
    NO_DATA_FOUND_EXPONATE EXCEPTION;
    TOO_MANY_ROWS EXCEPTION;


BEGIN

    SELECT *
    BULK COLLECT INTO orase
    FROM oras
    WHERE UPPER(nume_oras) LIKE UPPER(numeor);
    
    
    IF SQL%NOTFOUND THEN
        RAISE NO_DATA_FOUND_ORAS;
    END IF;
    
    IF orase.count >=2 THEN
        RAISE TOO_MANY_ROWS;
    END IF;
    
    
    SELECT DISTINCT ex.id_exponat,ex.NUME_EXPONAT, ex.data_publicare, ex.descriere
    BULK COLLECT INTO exponate
    FROM ORAS o 
    INNER JOIN GALERIE g on g.id_oras = o.id_oras
    inner join EVENIMENT ev on g.id_galerie = ev.id_galerie
    inner join EXPONAT_EVENIMENT_MAPPING eem on ev.id_eveniment = eem.id_eveniment
    inner join exponat ex on ex.id_exponat = eem.id_exponat
    inner join EXPONAT_AUTOR_MAPPING eam on eam.id_exponat=ex.id_exponat
    INNER join autor a on eam.id_autor = a.id_autor
    WHERE a.data_deces IS NULL AND nume_oras like numeor;

    --DBMS_OUTPUT.PUT_LINE(exponate.count);
    
    IF exponate.count = 0 THEN
     RAISE NO_DATA_FOUND_EXPONATE;
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('In orasul '||numeor || ' sunt exponatele:');
    FOR i in exponate.first..exponate.last LOOP
        DBMS_OUTPUT.PUT_LINE(exponate(i).nume_exponat);
    END LOOP;

    EXCEPTION
        WHEN NO_DATA_FOUND_ORAS THEN 
            DBMS_OUTPUT.PUT_LINE('Nu exista acest oras!');
        WHEN NO_DATA_FOUND_EXPONATE THEN 
            DBMS_OUTPUT.PUT_LINE('Nu sunt astfel de exponate in oras!');
        WHEN TOO_MANY_ROWS THEN 
            DBMS_OUTPUT.PUT_LINE('Exista mai multe orase cu acest nume!');
        WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Alta eroare!');

END CERINT9;

END proiect_complet;
/

--testam pachetul

EXECUTE proiect_complet.CERINTA6('Primavera');
EXECUTE proiect_complet.CERINTA7('Bucuresti');
BEGIN
DBMS_OUTPUT.PUT_LINE('Cerinta 8: ' || CERINTA8('Primavera'));
END;
EXECUTE proiect_complet.CERINT9('Paris');









